digraph "crypto_struct.h"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="crypto_struct.h",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="PSA cryptography module: Mbed TLS structured type implementations."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="crypto.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$crypto_8h.html",tooltip="Platform Security Architecture cryptography module."];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ctr_drbg.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ctr__drbg_8h.html",tooltip="This file contains definitions and functions for the CTR_DRBG pseudorandom generator."];
  Node2 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="psa_util.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$psa__util_8h.html",tooltip="Utility functions for the use of the PSA Crypto library."];
  Node2 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="ssl.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ssl_8h.html",tooltip="SSL/TLS functions."];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="debug.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$debug_8h.html",tooltip="Functions for controlling and providing debug output from the library."];
  Node5 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="net_sockets.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$net__sockets_8h.html",tooltip="Network sockets abstraction layer to integrate Mbed TLS into a BSD-style sockets API."];
  Node5 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="ssl_cache.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ssl__cache_8h.html",tooltip="SSL session cache implementation."];
  Node5 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="ssl_cookie.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ssl__cookie_8h.html",tooltip="DTLS cookie callbacks implementation."];
  Node5 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ssl_ticket.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ssl__ticket_8h.html",tooltip="TLS server ticket callbacks implementation."];
  Node2 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="k_sal_crypto.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$k__sal__crypto_8c.html",tooltip="SAL crypto for Generic PSA."];
  Node2 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="k_sal_object.c",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$k__sal__object_8c.html",tooltip="SAL object for Generic PSA."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
